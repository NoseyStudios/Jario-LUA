---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function love.load()
	love.graphics.setLineStyle("rough")
	love.graphics.setLineWidth(1)

	SCALE = 2
	TILE_SIZE = 32

	tilemap_w = 64
	tilemap_h = 24

	speed = 0.1

	player = {
		x		= 1,
		y		= 1,
		vx		= 0,
		vy		= 0,

		nx		= 0,
		ny		= 0,

		on_ground	= false,
	}

	draw_x			= 0
	draw_y			= 0

	screen_w		= 800 / SCALE 
	screen_h		= 600 / SCALE

	camera_x		= 0
	camera_y		= 0

	offset_x		= 0
	offset_y		= 0

	visible_tiles_x		= 0
	visible_tiles_y		= 0

	tilemap = {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1},
		{1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
		{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1},
		{1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},

		{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1},
		{1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
		{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1},
		{1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
	}

end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function love.update(dt)
	get_input()
	update_player(dt)

	check_collision()

	set_camera()
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function love.draw()
	love.graphics.push()
	love.graphics.scale(SCALE, SCALE)

	draw_tilemap()

	draw_player()
	draw_debug()

	love.graphics.pop()
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function get_tile(x, y)
	local tx = math.floor(x)
	local ty = math.floor(y)

	if tx >= 1 and x < tilemap_w + 1 and y >= 1 and y < tilemap_h + 1 then
		return tilemap[ty][tx]
	else
		return 1
	end
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function set_tile()

end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function get_input()
	if love.keyboard.isDown("left") then
		player.vx = player.vx - 1
	elseif love.keyboard.isDown("right") then
		player.vx = player.vx + 1
	else
		if player.vx > 0 then
			player.vx = player.vx - 1
		elseif player.vx < 0 then
			player.vx = player.vx + 1
		end
	end

--	if love.keyboard.isDown("z") then
--		if player.vy == 0 then
--			player.vy = -12
--		end
--	end
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function draw_player()
	love.graphics.setColor(0, 1, 0)
	draw_x = math.floor((player.x - offset_x) * TILE_SIZE)
	draw_y = math.floor((player.y - offset_y) * TILE_SIZE)

	love.graphics.rectangle("line", draw_x + 0.5, draw_y + 0.5, TILE_SIZE - 1, TILE_SIZE - 1)
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function draw_debug()
	love.graphics.setColor(1, 0, 0)
	love.graphics.print("px:" .. player.x,  8,  8)
	love.graphics.print("py:" .. player.y,  8, 24)

	love.graphics.print("dx:" .. draw_x,  8, 40)
	love.graphics.print("dy:" .. draw_y,  8, 56)

	love.graphics.print("vx:" .. player.vx,  8, 72)
	love.graphics.print("vy:" .. player.vy,  8, 88)

	love.graphics.print("nx:" .. player.nx,  8, 104)
	love.graphics.print("ny:" .. player.ny,  8, 120)



	love.graphics.print("cx:" .. camera_x,  200,  8)
	love.graphics.print("cy:" .. camera_y,  200, 24)

	love.graphics.print("vx:" .. visible_tiles_x,  200, 40)
	love.graphics.print("vy:" .. visible_tiles_y,  200, 56)

	love.graphics.print("ox:" .. offset_x,  200, 72)
	love.graphics.print("oy:" .. offset_y,  200, 88)

end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function set_camera()
	camera_x = player.x + 0.5
	camera_y = player.y + 0.5

	visible_tiles_x = screen_w / TILE_SIZE
	visible_tiles_y = screen_h / TILE_SIZE

	offset_x = camera_x - visible_tiles_x / 2
	offset_y = camera_y - visible_tiles_y / 2

	if offset_x < 0 then
		offset_x = 0
	end

	if offset_y < 0 then
		offset_y = 0
	end

	if offset_x > tilemap_w - visible_tiles_x then
		offset_x = tilemap_w - visible_tiles_x
	end

	if offset_y > tilemap_h - visible_tiles_y then
		offset_y = tilemap_h - visible_tiles_y
	end
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function draw_tilemap()
	for y = 1, tilemap_h do
		for x = 1, tilemap_w do
			if tilemap[y][x] == 1 then
				love.graphics.setColor(1, 1, 1)
				love.graphics.rectangle("line", (x - 1 - offset_x) * TILE_SIZE + 0.5, (y - 1 - offset_y) * TILE_SIZE + 0.5, TILE_SIZE - 1, TILE_SIZE - 1)
			else
				love.graphics.setColor(0.25, 0.25, 0.25)
				love.graphics.rectangle("line", (x - 1 - offset_x) * TILE_SIZE + 0.5, (y - 1 - offset_y) * TILE_SIZE + 0.5, TILE_SIZE - 1, TILE_SIZE - 1)
			end
		end
	end
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--function simple_round(i)
--	return math.floor(i * 10) / 10
--end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function update_player(dt)
	if player.vx > 15 then
		player.vx = 15
	end

	if player.vx < -15 then
		player.vx = -15
	end

	if player.vy > 15 then
		player.vy = 15
	end

	if player.vy < -15 then
		player.vy = -15
	end

	player.vy = player.vy + 20 * dt

	player.nx = player.x + player.vx * dt
	player.ny = player.y + player.vy * dt
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function check_collision()
	if player.vx <= 0 then					-- moving left
		if get_tile(player.nx + 1, player.y + 1) ~= 0 or get_tile(player.nx + 1, player.y + 1 + 0.9) ~= 0 then
			player.nx = math.floor(player.nx) + 1
			player.vx = 0
		end
	else							-- moving right
		if get_tile(player.nx + 1 + 1, player.y + 1) ~= 0 or get_tile(player.nx + 1 + 1, player.y + 1 + 0.9) ~= 0 then
			player.nx = math.floor(player.nx)
			player.vx = 0
		end
	end

	player.on_ground = false

	if player.vy <= 0 then					-- moving up
		if get_tile(player.nx + 1, player.ny + 1) ~= 0 or get_tile(player.nx + 1 + 0.9, player.ny + 1) ~= 0 then
			player.ny = math.floor(player.ny) + 1
			player.vy = 0
		end
	else							-- moving down
		if get_tile(player.nx + 1, player.ny + 1 + 1) ~= 0 or get_tile(player.nx + 1 + 0.9, player.ny + 1 + 1) ~= 0 then
			player.ny = math.floor(player.ny)
			player.vy = 0
			player.on_ground = true
		end
	end

	player.x = player.nx
	player.y = player.ny
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function love.keypressed(key)
	if key == "z" then
		if player.on_ground == true then
			if player.vy == 0 then
				player.vy = -12
			end
		end
	end
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




















---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------